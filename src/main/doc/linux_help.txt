CentOS 7.0默认使用的是firewall作为防火墙，使用iptables必须重新设置一下

1、直接关闭防火墙

systemctl stop firewalld.service #停止firewall

systemctl disable firewalld.service #禁止firewall开机启动

2、设置 iptables service

yum -y install iptables-services

如果要修改防火墙配置，如增加防火墙端口3306

vi /etc/sysconfig/iptables

增加规则

-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT

保存退出后

systemctl restart iptables.service #重启防火墙使配置生效

systemctl enable iptables.service #设置防火墙开机启动

最后重启系统使设置生效即可。


莫小安
CentOS7使用firewalld打开关闭防火墙与端口

1、firewalld的基本使用
启动： systemctl start firewalld
查看状态： systemctl status firewalld
停止： systemctl disable firewalld
禁用： systemctl stop firewalld

2.systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。
启动一个服务：systemctl start firewalld.service
关闭一个服务：systemctl stop firewalld.service
重启一个服务：systemctl restart firewalld.service
显示一个服务的状态：systemctl status firewalld.service
在开机时启用一个服务：systemctl enable firewalld.service
在开机时禁用一个服务：systemctl disable firewalld.service
查看服务是否开机启动：systemctl is-enabled firewalld.service
查看已启动的服务列表：systemctl list-unit-files|grep enabled
查看启动失败的服务列表：systemctl --failed

3.配置firewalld-cmd

查看版本： firewall-cmd --version
查看帮助： firewall-cmd --help
显示状态： firewall-cmd --state
查看所有打开的端口： firewall-cmd --zone=public --list-ports
更新防火墙规则： firewall-cmd --reload
查看区域信息:  firewall-cmd --get-active-zones
查看指定接口所属区域： firewall-cmd --get-zone-of-interface=eth0
拒绝所有包：firewall-cmd --panic-on
取消拒绝状态： firewall-cmd --panic-off
查看是否拒绝： firewall-cmd --query-panic

那怎么开启一个端口呢
添加
firewall-cmd --zone=public --add-port=80/tcp --permanent    （--permanent永久生效，没有此参数重启后失效）
重新载入
firewall-cmd --reload
查看
firewall-cmd --zone= public --query-port=80/tcp
删除
firewall-cmd --zone= public --remove-port=80/tcp --permanent



在root用户下
systemctl stop firewalld
systemctl disable firewalld
systemctl status firewalld
vi /etc/selinux/config
把SELINUX=enforcing 改成 SELINUX=disabled





////////////////////

CentOS/Linux下设置IP地址

1：临时修改：
1.1：修改IP地址
# ifconfig eth0 192.168.100.100

1.2：修改网关地址
# route add default gw 192.168.100.1 dev eth0

1.3：修改DNS
# echo "nameserver 8.8.8.8" >> /etc/resolv.conf

这个时候就可以上网了，上网的IP地址为192.168.100.100，网关地址为192.168.100.1。但是这样的设置是临时性的，一旦重启网卡或者重启服务器，除了1.3的操作其他均会被还原，这样的方式只适合临时IP修改，想要永久性修改网卡配置文件，就需要修改相应的文件

2：永久性修改：
2.1：修改IP地址
修改/etc/sysconfig/network-scripts/ifcfg-eth0文件，如果有多张网卡，则修改相应的网卡
# vi /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0                              #网卡对应的设备别名
BOOTPROTO=static                    #网卡获得ip地址的方式（默认为dhcp，表示自动获取）
HWADDR=00:07:E9:05:E8:B4    #网卡MAC地址（物理地址）
IPADDR=192.168.100.100          #IP地址
NETMASK=255.255.255.0          #子网掩码
ONBOOT=yes                              #系统启动时是否激活此设备


2.2：修改网关地址
修改/etc/sysconfig/network文件
# vi /etc/sysconfig/network
NETWORKING=yes                #表示系统是否使用网络，no表示不能使用网络
HOSTNAME=doiido                #设置本机的主机名，要和/etc/hosts中设置的主机名相同
GATEWAY=192.168.100.1      #设置网关的IP地址

这个时候已经可以ping通IP地址，但是还无法ping通域名，因此需要修改DNS

2.3：修改DNS
修改/etc/resolv.conf文件
# vi /etc/resolv.conf
nameserver 8.8.8.8                      #google域名服务器
nameserver 114.144.114.114      #国内域名服务器

2.4：重启网卡
# service network restart
正在关闭接口 eth0： [确定]
关闭环回接口： [确定]
弹出环回接口： [确定]
弹出界面 eth0： [确定]

这个时候，系统就可以正常的上网了


4 网卡配置静态IP

1）编辑配置文件,添加修改以下内容
# vi  /etc/sysconfig/network-scripts/ifcfg-eth0
BOOTPROTO=static   #启用静态IP地址
ONBOOT=yes  #开启自动启用网络连接
IPADDR=192.168.21.129  #设置IP地址
NETMASK=255.255.255.0  #设置子网掩码
GATEWAY=192.168.21.2   #设置网关
DNS1=8.8.8.8 #设置主DNS
DNS2=8.8.4.4 #设置备DNS
IPV6INIT=no  #禁止IPV6


///////////////


今天在一台PC上安装了CentOS 7，当时选择了最小安装模式，安装完成后马上用ifconfig查看本机的ip地址（局域网已经有DHCP），发现报错,提示ifconfig命令没找到。
[root@centos1 ~]# ifconfig
-bash: ifconfig: command not found

首先，习惯性的输入echo $PATH(查看当前PATH环境变量，跟DOS的path命令一样的功能，注意Linux系统中的命令是区分大小写的)，显示结果如下：
[root@centos1 ~]# echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin

从上面显示结果看，放置系统管理程序的路径/usr/sbin已存在，就是放外部命令的路径。直接用ls查看/usr/sbin/目录，也没看到ifconfig，怎么回事？

[root@centos1 ~]# ls /usr/sbin/

我还是不死心，再用find命令也没找到ifconfig?
[root@centos1 ~]# find / -name "ifconfig"

此时心里有底了，应该是用某个命令代替了ifconfig了。上百度一查，果不其然，已经用ip命令代替ifconfig命令了。下面列出ip命令常用参数。
Ip  [选项]  操作对象{link|addr|route...}

# ip link show                           # 显示网络接口信息
# ip link set eth0 upi                   # 开启网卡
# ip link set eth0 down                  # 关闭网卡
# ip link set eth0 promisc on            # 开启网卡的混合模式
# ip link set eth0 promisc offi          # 关闭网卡的混个模式
# ip link set eth0 txqueuelen 1200       # 设置网卡队列长度
# ip link set eth0 mtu 1400              # 设置网卡最大传输单元
# ip addr show                           # 显示网卡IP信息
# ip addr add 192.168.0.1/24 dev eth0    # 设置eth0网卡IP地址192.168.0.1
# ip addr del 192.168.0.1/24 dev eth0    # 删除eth0网卡IP地址

# ip route list                                            # 查看路由信息
# ip route add 192.168.4.0/24  via  192.168.0.254 dev eth0 # 设置192.168.4.0网段的网关为192.168.0.254,数据走eth0接口
# ip route add default via  192.168.0.254  dev eth0        # 设置默认网关为192.168.0.254
# ip route del 192.168.4.0/24                              # 删除192.168.4.0网段的网关
# ip route del default                                     # 删除默认路由

输入ip addr命令后，发现enp2s0网卡（这个enp2s0是我这里的网卡）中没有ip地址。
[root@centos1 ~]# ip addr

既然没有ip地址，那直接去/etc/sysconfig/network-scripts目录中看一下的网卡ip信息的配置文件名吧。
[root@centos1 ~]# ls /etc/sysconfig/network-scripts/
ifcfg-enp2s0  ifdown-eth   ifdown-post    ifdown-Team      ifup-aliases  ifup-ipv6   ifup-post    ifup-Team      init.ipv6-global
ifcfg-lo      ifdown-ippp  ifdown-ppp     ifdown-TeamPort  ifup-bnep     ifup-isdn   ifup-ppp     ifup-TeamPort  network-functions
ifdown        ifdown-ipv6  ifdown-routes  ifdown-tunnel    ifup-eth      ifup-plip   ifup-routes  ifup-tunnel    network-functions-ipv6
ifdown-bnep   ifdown-isdn  ifdown-sit     ifup             ifup-ippp     ifup-plusb  ifup-sit     ifup-wireless

从结果看，之前保存网卡ip信息的配置文件名也由以前的ifcfg-eth0变成了ifcfg-enp2s0，如果你的还是ifcfg-eth0，那就修改这个名称的配置文件就好了，我这里已经变成了ifcfg-enp2s0，好吧，既然系统给他命了这么个名，那就直接修改这个配置文件就行了。先cat一下ifcfg-enp2s0
[root@centos1 ~]# cat /etc/sysconfig/network-scripts/ifcfg-enp2s0
HWADDR=00:E0:69:01:6A:96
TYPE=Ethernet
BOOTPROTO=dhcp
DEFROUTE=yes
PEERDNS=yes
PEERROUTES=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
IPV6_FAILURE_FATAL=no
NAME=enp2s0
UUID=5b0a7d76-1602-4e19-aee6-29f57618ca01
ONBOOT=no

从上面的配置中有看到虽然BOOTPROTO=dhcp，但是ONBOOT=no，这里用vi将ONBOOT=no改成ONBOOT=yes，然后用shutdown -r重启CentOS（当然也可以用ifdown和ifup，network命令重启网卡，后面有介绍，我这里是习惯性的用shutdown -r重启，vi是linux下的文本编辑器，类似于windows下的notepad.exe[记事本软件]，不会用的朋友请自行百度vi）。
[root@centos1 ~]# vi /etc/sysconfig/network-scripts/ifcfg-enp2s0
HWADDR=00:E0:69:01:6A:96
TYPE=Ethernet
BOOTPROTO=dhcp
DEFROUTE=yes
PEERDNS=yes
PEERROUTES=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
IPV6_FAILURE_FATAL=no
NAME=enp2s0
UUID=5b0a7d76-1602-4e19-aee6-29f57618ca01
ONBOOT=yes
重启系统：
[root@centos1 ~]# shutdown -r

重启完成后输入帐号和密码进入命令提示操作符继续用ip addr查看网卡信息。结果如下：
[root@centos1 ~]# ip add
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: enp2s0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 00:e0:69:01:6a:96 brd ff:ff:ff:ff:ff:ff
    inet 172.8.1.200/24 brd 172.8.1.255 scope global enp2s0
       valid_lft forever preferred_lft forever
    inet6 fe80::2e0:69ff:fe01:6a96/64 scope link
       valid_lft forever preferred_lft forever

从上面结果看到，通过DHCP分配到的ip地址是172.8.1.200，虽然是测试机，但为了便于今后的远程连接，我们还是给这台机配置一个固定ip吧。
再次用vi打开vi /etc/sysconfig/network-scripts/ifcfg-enp2s0，输入以下参数，再用#将BOOTPROTO=dhcp注释。
IPADDR0=172.8.1.211
PREFIX0=24
GATEWAY0=172.8.1.1
DNS1=172.8.1.1

完整参数如下，好了，网络配通了。明天继续其它功能测试。
[root@centos1 ~]# cat /etc/sysconfig/network-scripts/ifcfg-enp2s0
HWADDR=00:E0:69:01:6A:96
TYPE=Ethernet
#BOOTPROTO=dhcp
DEFROUTE=yes
PEERDNS=yes
PEERROUTES=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
IPV6_FAILURE_FATAL=no
NAME=enp2s0
UUID=5b0a7d76-1602-4e19-aee6-29f57618ca01
ONBOOT=yes
IPADDR0=172.8.1.211
PREFIX0=24
GATEWAY0=172.8.1.1
DNS1=172.8.1.1

当联上互联网后，我们可以用yum install net-tools安装net-tools组件，将ifconfig命令找回来。有了互联网一切都好办了。net-tools工具包安装好以后netstat命令也有了。
[root@centos1 ~]#yum install net-tools

=======================================
linux下启动和关闭网卡命令汇总：

 linux命令1: ifup、ifdown：
实时地手动修改一些网络接口参数，可以利用ifconfig来实现，如果是要直接以配置文件，亦即是在 /etc/sysconfig/network-scripts里面的ifcfg-ethx等文件的设置参数来启动的话，那就得要通过ifdown或ifup来实现了。
[root@linux ~]# ifup {interface}
[root@linux ~]# ifdown {interface}
[root@linux ~]# ifup eth0
ifup与ifdown真是太简单了。这两个程序其实是script而已，它会直接到 /etc/ sysconfig/network-scripts目录下搜索对应的配置文件，例如ifup eth0，它会找出ifcfg-eth0这个文件的内容，然后加以设置。关于ifcfg-eth0的设置请参考前一章连上Internet的说明。

不过，由于这两个程序主要是搜索设置文件（ifcfg-ethx）来进行启动与关闭的，所以在使用前请确定ifcfg-ethx是否真的存在于正确的目录内，否则会启动失败。另外，如果以ifconfig eth0来设置或者是修改了网络接口后，就无法再以ifdown eth0的方式来关闭了。因为ifdown会分析比较目前的网络参数与ifcfg-eth0是否相符，不符的话，就会放弃这次操作。因此，使用ifconfig修改完毕后，应该要以ifconfig eth0 down才能够关闭该接口。

linux命令2: /etc/init.d/network restart
[root@CentOS2 ~]# /etc/init.d/network restart
正在关闭接口 eth1：                         [确定]
关闭环回接口：                                 [确定]
弹出环回接口：                                 [确定]
弹出界面 eth1： Determining if ip address 10.0.0.168 is already in use for device eth1...
                                          [确定]

linux命令3: service network restart
[root@CentOS2 ~]# service network restart
正在关闭接口 eth1：                         [确定]
关闭环回接口：                                 [确定]
弹出环回接口：                                 [确定]
弹出界面 eth1： Determining if ip address 10.0.0.168 is already in use for device eth1...
                                          [确定]

如何让LINUX网卡开机自动启动

激活网卡的命令是：ifconfig eth0 up你既然知道了命令，自己做一个脚本，放在启动项目就可以了。
通过编辑网卡配置文件修改网卡配置文件保存在/etc/sysconfig/network-scripts目录下面。
第一块网卡的文件是ifcfg-eth0
第二块网卡的文件是ifcfg-eth1
以此类推，如果如果你有一块，那么你就输入一下命令
[root@linux ~]# vi /etc/sysconfig/network-scripts/ifcfg-eth0
打开之后，将ONBOOT=no，改为ONBOOT=yes,(如果没有，手动添加ONBOOT=yes),:wq保存退出，重启服务。
echo "ONBOOT=yes" >> /etc/sysconfig/network-script/ifcfg-eth0
在/etc/sysconfig/network-scripts中添加ONBOOT=yes设置网络开机自动启动


//////////////

DEVICE=eth0　　　　　　　　　　　　　　　　　　　　#描述网卡对应的设备别名
BOOTPROTO=static　　　　　　　　　　　　　　　　　#设置网卡获得 ip 的方式，选项：static【静态指定】、dhcp【协议】、bootp【协议】
HWADDR=00:0c:29:24:e2:1b
IPV6INIT=no
NM_CONTROLLED=no
ONBOOT=yes
TYPE=Ethernet
UUID="e6ecacb0-4608-47f9-b56c-49c5d2f61e2a"
IPADDR=192.168.178.131　　　　　　　　　　　　　#设置自己喜欢的ip地址,保持在同一个网段
NETMASK=255.255.255.0　　　　　　　　　　　　　 #网卡对应的网络掩码
GATEWAY=192.168.178.2　　　　　　　　　　　　　 #保持在同一网段,末尾设置为2
DNS1=192.168.178.2 　　　　　　　　　　　　　　 #DNS1服务器的地址，保持在同一网段,末尾设置为2
USERCTL=no


/////////////////////////
ubuntu-server的网络配置
之前用的ubuntu，要么是装好的，要么是虚拟机里的，今天在公司亲自给一台新机器装了个ubuntu-server 16.04，在网络配置上遇到了问题，果然实践出真知啊。

事情是这样的，装好系统后，我的网络配置是这样的:

/etc/network/interfaces

auto eth0

iface eth0 inet static

address 192.168.1.3

netmask 255.255.255.0

gateway 192.168.1.1

/etc/resolvconf/resolv.conf.d/base

nameserver 202.96.134.133

这样写是没问题的，但用ifup eth0死活起来不，提示"not device eth0",网口也不亮。试了好多遍后，我怀疑是不是没装网卡驱动，但又觉得不对，iso里肯定带驱动的，配着，配着，看着"not device eth0"，突然一想，是不是网卡不叫eth0,我之前的认知，觉得都是eth打头的，于是我敲了ifconfig -a,除了lo，还有几个名，于是我选了一个enp9s0替换eth0,再一敲ifup enp9s0,果然ok了。

这里再来总结一下ubuntu的有线网络配置

1、自动获取ip

/etc/network/interfaces

auto [dname]

iface [dname] inet dhcp

2、静态ip

A.配置地址参数

/etc/network/interface

auto [dname]

iface [dname] inet static

address [ip地址]

netmask [子网掩码]

gateway [网关]

B.配置DNS服务器

/etc/resolvconf/resolv.conf.d/base

nameserver [dns服务器ip]



其中dname是网卡名，用ifconfig -a查看.